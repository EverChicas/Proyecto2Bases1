
---------------------------------------------------------------------- PROVEEDORES--------------------------------------------------
-- FUNCION QUE ME DEVUELVE -1 SI EL PROVEEDOR NO EXISTE, SI EXISTE ME DEVUELVE SU ID DE PROVEEDOR
DELIMITER //
CREATE FUNCTION EXISTE_PROVEEDOR(NOMBRE_P  VARCHAR(45))
RETURNS INT(11)
BEGIN
	DECLARE VALOR INT DEFAULT -1;
	SELECT P.PROVEEDOR INTO VALOR FROM PROVEEDOR P
	WHERE P.NOMBRE = NOMBRE_P;
	RETURN VALOR;
END//


DROP PROCEDURE AGREGAR_PROVEEDOR;
-- PROCEDIMIENTO PARA AGREGAR PROVEEDORES (YA VALIDO QUE NO EXISTA)
DELIMITER //
CREATE PROCEDURE AGREGAR_PROVEEDOR(NOMBRE_P VARCHAR(45), DIRECCION_P VARCHAR(250), CORREO_P VARCHAR(100), TELEFONO_P VARCHAR(15))
BEGIN
	DECLARE EXISTE INTEGER;
    DECLARE RESULTADO INTEGER DEFAULT 0;
    SET EXISTE = EXISTE_PROVEEDOR(NOMBRE_P);
    IF EXISTE = -1 THEN
		INSERT INTO PROVEEDOR(NOMBRE, DIRECCION, CORREO, TELEFONO)
        VALUES (NOMBRE_P, DIRECCION_P, CORREO_P, TELEFONO_P);
        SET RESULTADO = 1;
	END IF;
    SELECT RESULTADO;
END//

-- OBTIENEN LOS PROVEEDORES CON TODOS SUS ATRIBUTOS
DROP PROCEDURE PROVEEDORES;

DELIMITER //
CREATE PROCEDURE PROVEEDORES()
BEGIN
	SELECT * FROM PROVEEDOR;
END//




DROP PROCEDURE GET_PROVEEDOR;
-- SOLICITAR UN PROVEEDOR
DELIMITER //
CREATE PROCEDURE GET_PROVEEDOR(PROVEEDOR_P INT(11))
BEGIN
	SELECT * FROM PROVEEDOR
	WHERE PROVEEDOR = PROVEEDOR_p;
END//



DROP PROCEDURE MODIFICAR_PROVEEDOR;
-- MODIFICAR UN PROVEEDOR
DELIMITER //
CREATE PROCEDURE MODIFICAR_PROVEEDOR(PROVEEDOR_P INT(11), NOMBRE_P VARCHAR(45), DIRECCION_P VARCHAR(250), CORREO_P VARCHAR(100), TELEFONO_P VARCHAR(15))
BEGIN
	UPDATE PROVEEDOR 
	SET NOMBRE = NOMBRE_P, DIRECCION = DIRECCION_P, CORREO = CORREO_P,TELEFONO = TELEFONO_P
	WHERE PROVEEDOR = PROVEEDOR_P;
END//


DROP PROCEDURE ELIMINAR_PROVEEDOR;
-- ELIMIAR UN PROVEEDOR
DELIMITER //
CREATE PROCEDURE ELIMINAR_PROVEEDOR(PROVEEDOR_P INT(11))
BEGIN
    DELETE FROM COMPRA
	WHERE PROVEEDOR = PROVEEDOR_P;
	DELETE FROM PROVEEDOR
	WHERE PROVEEDOR = PROVEEDOR_P;
END//

---------------------------------------------------------------------- COMPRAS A PROVEEDORES ----------------------------------------------------
DROP PROCEDURE ACTUALIZAR_UNIDADES_DISPONIBLES;
DELIMITER //
CREATE PROCEDURE ACTUALIZAR_UNIDADES_DISPONIBLES(PRODUCTO_P INT(11), CANTIDAD INT(11))
BEGIN
	UPDATE INVENTARIO INV, PRODUCTO PRO
	SET INV.UNIDADES_DISPONIBLES = INV.UNIDADES_DISPONIBLES + CANTIDAD 
	WHERE INV.PRODUCTO = PRO.PRODUCTO
	AND PRO.PRODUCTO = PRODUCTO_P;
END//

DROP PROCEDURE AGREGAR_COMPRA;
-- PROCEDIMIENTO PARA AGREGAR COMPRAS
DELIMITER //
CREATE PROCEDURE AGREGAR_COMPRA(PRECIO_UNITARIO_P DOUBLE, VALOR_COMPRA_P DOUBLE, CANTIDAD INT(11), NO_FACTURA_P INT(11), PROVEEDOR_P INT(11), USUARIO_P INT(11), PRODUCTO_P INT(11))
BEGIN
	call proyecto2bases1.ACTUALIZAR_UNIDADES_DISPONIBLES(PRODUCTO_P, CANTIDAD);
	INSERT INTO COMPRA(FECHA, PRECIO_UNITARIO, VALOR_COMPRA, CANTIDAD, NO_FACTURA, PROVEEDOR, USUARIO, PRODUCTO)
    VALUES (NOW(), PRECIO_UNITARIO_P, VALOR_COMPRA_P, CANTIDAD, NO_FACTURA_P, PROVEEDOR_P, USUARIO_P, PRODUCTO_P);
    -- INSERT INTO MOVIMIENTO
    -- VALUES (FECHA_P, CONCAT("Compra de productos factura No.", NO_FACTURA_P), VALOR_COMPRA_P, 'SALDO CAJA',USUARIO_P,PRODUCTO_P);
END//

-- LISTA DE FACTURAS
USE `proyecto2bases1`;
DROP procedure IF EXISTS `LISTA_FACTURAS`;

DELIMITER $$
USE `proyecto2bases1`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `LISTA_FACTURAS`()
BEGIN
	SELECT * FROM factura;
END$$

DELIMITER ;
